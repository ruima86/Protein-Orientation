function res = twobc1(ya,yb,para,r0,rb,psi0,C01,C02,fSharp,ag1,ag2,kappa0,kappa2,p,ap,theta)

% dy = zeros(9,1);   
% psi = y(1);   
% dpsi = y(2);
% r = y(3);
% z = y(4);
% alpha = y(5);
% beta = y(6);
% h = y(7);
% gamma = y(8);
% area = y(9);

h = para(1);

res = [ya(1);...  % psi(u=0)=0
    ya(3)-r0;...  % r(u=0) = 0;
    ya(6);...    % force balance condition
    ya(5)-((-1).*C01.*kappa0.*tan(ya(1))+(-1/2).*ap.*C02.*kappa2.*cos(theta) ...
    .^2.*tan(ya(1)).*tanh(fSharp.*((-1).*ag1+ya(9)))+(1/2).*ap.*C02.* ...
    kappa2.*cos(theta).^2.*tan(ya(1)).*tanh(fSharp.*((-1).*ag2+ya(9))) ...
    +(1/2).*kappa0.*sin(ya(1)).*tan(ya(1)).*ya(3).^(-1)+(1/4).*ap.* ...
    kappa2.*cos(theta).^4.*sin(ya(1)).*tan(ya(1)).*tanh(fSharp.*((-1) ...
    .*ag1+ya(9))).*ya(3).^(-1)+(-1/4).*ap.*kappa2.*cos(theta).^4.*sin( ...
    ya(1)).*tan(ya(1)).*tanh(fSharp.*((-1).*ag2+ya(9))).*ya(3).^(-1)+( ...
    1/2).*C01.^2.*kappa0.*sec(ya(1)).*ya(3)+(1/4).*ap.*C02.^2.* ...
    kappa2.*sec(ya(1)).*tanh(fSharp.*((-1).*ag1+ya(9))).*ya(3)+(-1/4) ...
    .*ap.*C02.^2.*kappa2.*sec(ya(1)).*tanh(fSharp.*((-1).*ag2+ya(9))) ...
    .*ya(3)+(-1/2).*h.^(-2).*kappa0.*sec(ya(1)).*ya(2).^2.*ya(3)+( ...
    -1/4).*ap.*h.^(-2).*kappa2.*sec(ya(1)).*sin(theta).^4.*tanh( ...
    fSharp.*((-1).*ag1+ya(9))).*ya(2).^2.*ya(3)+(1/4).*ap.*h.^(-2).* ...
    kappa2.*sec(ya(1)).*sin(theta).^4.*tanh(fSharp.*((-1).*ag2+ya(9))) ...
    .*ya(2).^2.*ya(3)+(1/2).*p.*tan(ya(1)).*ya(3).^2+tan(ya(1)).*ya(6) ...
    +sec(ya(1)).*ya(3).*ya(8));...  % conserved Hamiltonian
    ya(9);...    % A(u=0)=0
    ya(7)-h;...  % h(u=0) = h0;
    yb(3)-r0;...   % r(u=1) = rb;
    yb(1)-psi0;...  % fixed-hinge psi(u=0)=psi0
    yb(4);...     % z(u=1) = 0;
    yb(9)-2*rb^2]; % fix total area